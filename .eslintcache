[{"E:\\React projects\\sample1\\proj1\\src\\index.js":"1","E:\\React projects\\sample1\\proj1\\src\\App.js":"2","E:\\React projects\\sample1\\proj1\\src\\ApiCall.js":"3","E:\\React projects\\sample1\\proj1\\src\\components\\Banner\\Bann.jsx":"4","E:\\React projects\\sample1\\proj1\\src\\components\\Cards\\collection_1\\Collection1.jsx":"5","E:\\React projects\\sample1\\proj1\\src\\components\\Cards\\collection_2\\Collection2.jsx":"6"},{"size":140,"mtime":1609827050895,"results":"7","hashOfConfig":"8"},{"size":1692,"mtime":1609829765309,"results":"9","hashOfConfig":"8"},{"size":284,"mtime":1609829435889,"results":"10","hashOfConfig":"8"},{"size":601,"mtime":1609830645863,"results":"11","hashOfConfig":"8"},{"size":2265,"mtime":1609831799877,"results":"12","hashOfConfig":"8"},{"size":2190,"mtime":1609831888060,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"19g6q24",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"E:\\React projects\\sample1\\proj1\\src\\index.js",[],["29","30"],"E:\\React projects\\sample1\\proj1\\src\\App.js",[],"E:\\React projects\\sample1\\proj1\\src\\ApiCall.js",[],"E:\\React projects\\sample1\\proj1\\src\\components\\Banner\\Bann.jsx",[],"E:\\React projects\\sample1\\proj1\\src\\components\\Cards\\collection_1\\Collection1.jsx",["31","32"],"import React, { useEffect,useRef,useCallback } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { Grid } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 330,\r\n    },\r\n});\r\n\r\nexport default function Collection1({ pics, loadData, pageNum }) {\r\n    const classes = useStyles();\r\n    const observer = useRef();\r\n    const lastPicsRef = useCallback(node => {\r\n        if (observer.current) observer.current.disconnect()\r\n        observer.current = new IntersectionObserver(entries => {\r\n            if (entries[0].isIntersecting) {\r\n                loadData(1580860, pageNum+=1)\r\n            }\r\n        })\r\n        if(node) observer.current.observe(node)\r\n    },[pageNum])\r\n    useEffect(() => {\r\n        loadData(1580860, pageNum)\r\n    }, []);\r\n    return (\r\n        <Grid container xs={12} lg={12} sm={3} spacing={3} justify=\"center\" >\r\n            {pics.map((pic, index) => {\r\n                if (pics.length === index + 1) {\r\n                    return (\r\n                        <Grid key={pic.id} xs={12} lg={12} sm={4} ref={lastPicsRef} item component={Card} className={classes.root}>\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            alt=\"Contemplative Reptile\"\r\n                            height=\"140\"\r\n                            image={pic.urls.raw}\r\n                            title=\"Contemplative Reptile\"\r\n                        />\r\n                        </Grid>\r\n                    )\r\n                } else {\r\n                   return (\r\n                       <Grid key={pic.id} item xs={12} lg={12} sm={3} component={Card} className={classes.root}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                alt=\"Contemplative Reptile\"\r\n                                height=\"140\"\r\n                                image={pic.urls.raw}\r\n                                title=\"Contemplative Reptile\"\r\n                            />\r\n                        </Grid>\r\n                    )\r\n                }\r\n            })}\r\n        </Grid>\r\n    );\r\n}\r\n","E:\\React projects\\sample1\\proj1\\src\\components\\Cards\\collection_2\\Collection2.jsx",["33","34"],"import React, { useEffect, useRef, useCallback } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { Grid } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 345,\r\n    },\r\n});\r\n\r\nexport default function Collection2({ pics, loadData, pageNum }) {\r\n    const classes = useStyles();\r\n    const observer = useRef();\r\n    const lastPicsRef = useCallback(node => {\r\n        if (observer.current) observer.current.disconnect()\r\n        observer.current = new IntersectionObserver(entries => {\r\n            if (entries[0].isIntersecting) {\r\n               \r\n                loadData(138396, pageNum += 1)\r\n            }\r\n        })\r\n        if (node) observer.current.observe(node)\r\n    }, [pageNum])\r\n    useEffect(() => {\r\n        loadData(138396, pageNum)\r\n    }, []);\r\n    return (\r\n        <Grid container xs={12} lg={12} sm={3} spacing={3} justify=\"center\" >\r\n            {pics.map((pic, index) => {\r\n                if (pics.length === index + 1) {\r\n                    return (<Grid key={pic.id} ref={lastPicsRef} item component={Card} className={classes.root}>\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            alt=\"Contemplative Reptile\"\r\n                            height=\"140\"\r\n                            image={pic.urls.raw}\r\n                            title=\"Contemplative Reptile\"\r\n                        />\r\n                    </Grid>)\r\n                } else {\r\n                    return (\r\n                        <Grid key={pic.id} item component={Card} className={classes.root}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                alt=\"Contemplative Reptile\"\r\n                                height=\"140\"\r\n                                image={pic.urls.raw}\r\n                                title=\"Contemplative Reptile\"\r\n                            />\r\n                        </Grid>\r\n                    )\r\n                }\r\n            })}\r\n        </Grid>\r\n    );\r\n}\r\n",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":20,"column":44,"nodeType":"41","endLine":20,"endColumn":45},{"ruleId":"39","severity":1,"message":"42","line":27,"column":8,"nodeType":"43","endLine":27,"endColumn":10,"suggestions":"44"},{"ruleId":"39","severity":1,"message":"40","line":21,"column":45,"nodeType":"41","endLine":21,"endColumn":46},{"ruleId":"39","severity":1,"message":"42","line":28,"column":8,"nodeType":"43","endLine":28,"endColumn":10,"suggestions":"45"},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"react-hooks/exhaustive-deps","Assignments to the 'pageNum' variable from inside React Hook useCallback will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useCallback.","Literal","React Hook useEffect has missing dependencies: 'loadData' and 'pageNum'. Either include them or remove the dependency array. If 'loadData' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["48"],["49"],"no-global-assign","no-unsafe-negation",{"desc":"50","fix":"51"},{"desc":"50","fix":"52"},"Update the dependencies array to be: [loadData, pageNum]",{"range":"53","text":"54"},{"range":"55","text":"54"},[905,907],"[loadData, pageNum]",[926,928]]